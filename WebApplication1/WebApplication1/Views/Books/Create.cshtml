@model LibrarySystem.Book

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AuthorId, "AuthorId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AuthorId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MainCategoryId, "MainCategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MainCategoryId", null, "Select Main Category", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MainCategoryId, "", new { @class = "text-danger", @id="MainCategory" })
            </div>
        </div>
        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.SubCategoryId, "SubCategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SubCategoryId", null, "Select Sub Category", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">

    $('#MainCategoryId').change(function () {
        
            var selectedCategoryValue = $('#MainCategoryId option:selected').val();
             $.ajax({

                 type: "GET",
                 url: "/Books/GetSubCategory",
                 data: { CategoryId: selectedCategoryValue },
                 success: function (data) { 
                     var $el = $("#SubCategoryId");
                     $el.empty(); // remove old options
                     $el.append($("<option></option>")
                         .attr("value", '').text('Select Sub Category'));

                     $.each(data, function (key, value) {
                         $el.append($("<option></option>")
                             .attr("value", this.Value).text(this.Text));
                     });
                    
                 },
                 error: function (e, ts, et) {
                     alert(ts);
                 }
             });
      

     });

</script>
}
